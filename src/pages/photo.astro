---
import Section from "../components/Section.astro";
import Layout from "../layouts/Layout.astro";
import { getCldImageUrl } from "astro-cloudinary/helpers";

const { searchParams } = Astro.url;
const id = searchParams.get("id");

if (id == null) return Astro.redirect("/");

const url = getCldImageUrl({ src: id });
---

<Layout title="Cloudinary Hackaton">
  <Section id="photo">
    <main class="grid grid-cols-1 md:grid-cols-2 gap-4 items-center justify-center" data-id={id}>
      <header>
        <h2 class="text-accent max-w-[600px] text-pretty text-center font-creepster text-2xl md:text-4xl font-bold text-brand-500 mb-4">
          ¡Dale un toque espeluznante a tu foto de Halloween!
        </h2>
        <div class="flex flex-col items-center gap-4 mt-6">
          <label for="creatureSelect" class="text-lg font-light text-text">Elige tu transformación:</label>
          <select id="creatureSelect" class="p-2 border rounded-md w-64 mb-6">
            <option value="zombie">Zombi</option>
            <option value="vampire">Vampiro</option>
            <option value="wolfman">Hombre lobo</option>
            <option value="ghost">Fantasma</option>
          </select>
          <label for="backgroundSelect" class="text-lg font-light text-text">Elige un fondo de Halloween:</label>
          <select id="backgroundSelect" class="p-2 border rounded-md w-64 mb-6">
            <option value="">Sin fondo</option>
            <option value="haunted-house">Casa embrujada</option>
            <option value="spooky-forest">Bosque tenebroso</option>
            <option value="pumpkin-patch">Campo de calabazas</option>
            <option value="graveyard">Cementerio oscuro</option>
            <option value="abandoned-castle">Castillo abandonado</option>
            <option value="foggy-swamp">Pantano con niebla</option>
          </select>
          <button id="applyChanges" class="font-creepster p-4 text-xl rounded-full bg-accent">
            Aplicar Cambios
          </button>
        </div>
      </header>
      <div class="w-fit flex flex-col justify-center">
        <two-up>
          <img id="original" src={url} alt="Original Image" class="" />
          <img id="preview" src={url} alt="Preview Image" class="" />
        </two-up>
        <div class="flex gap-4 mt-6 justify-center items-center">
          <button class="download font-creepster  text-bg bg-text p-4 rounded-xl cursor-pointer"
            >Descargar</button
          >
          <button id="share" class=" font-creepster text-bg bg-text p-4 rounded-xl cursor-pointer"
            >Compartir</button
          >
      </div>
      </div>
    </main>
  </Section>
</Layout>

<script>
  import { getCldImageUrl } from "astro-cloudinary/helpers";
  import "two-up-element";

  const id = document.querySelector("main")?.getAttribute("data-id") ?? "";
  const preview = document.getElementById("preview") as HTMLImageElement;
   const downloadButton = document.querySelector(
    ".download"
  ) as HTMLButtonElement
  const creatureSelect = document.getElementById(
    "creatureSelect"
  ) as HTMLSelectElement;
  const backgroundSelect = document.getElementById(
    "backgroundSelect"
  ) as HTMLSelectElement;
  const applyChangesButton = document.getElementById(
    "applyChanges"
  ) as HTMLButtonElement;

  applyChangesButton.addEventListener("click", () => {
    const creature = creatureSelect.value;
    const background = backgroundSelect.value;

    const transformations = {
      replace: { from: "person", to: creature, preserveGeometry: true },
      replaceBackground: background ? { prompt: background } : undefined,
      improve: true
    };

    const url = getCldImageUrl({ src: id, ...transformations });

    preview.style.opacity = ".3";

    preview.src = url;
    preview.onload = () => {
      preview.style.opacity = "1";
    };
    preview.src = url;
  });
  downloadButton.addEventListener("click", (e) => {
    const url = getCldImageUrl({ src: id, format: "avif" })

    const a = document.createElement("a")
    a.href = url
    a.download = "image.avif"
    a.click()
  })
</script>
